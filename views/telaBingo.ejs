<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="../css/main.css">
    <script src="../socket.io/socket.io.js"></script>

    <title>Collab Bingo | <%= sala_name %> </title>
</head>
<body>
    <style>
        .teste {
            cursor: pointer;
        }
    </style>    

<header>
    <div class="telaBingo__vizualizar-pedras vizualizar-pedras">
        <img src="/assets/img/visualizar-pedra.svg" alt="vizualizar pedra" onclick="aparecerMenu(event)">
    </div>

    <section class ="modal-pedras modal-pedras--escondido">
        <div class="modal-container-list">
            <div class="modal-container-list-button">
                <button>
                    <img src="/assets/img/close.svg" alt="Fechar Modal" onclick="esconderMenu(event)">
                </button>
            </div>
            <div class="modal-container-list__close">
                <h2>Pedras que faltam para:</h2>
            </div>
            <div class="modal-container-list__users">
                <!-- Está recebendo um elemento com os dados dos usuários -->
            </div>
        </div>
    </section>

    <script>
        function aparecerMenu(e){
            e.preventDefault();
            let elemento = document.getElementsByClassName('modal-pedras--escondido')[0]
            if (elemento) {
                elemento.classList.toggle('modal-pedras--escondido')
            }
        }
        
        function esconderMenu(e){
            e.preventDefault();
            let elemento = document.getElementsByClassName('modal-pedras')[0]
            if (elemento) {
                elemento.classList.toggle('modal-pedras--escondido')
            }
        }
    </script>
</header>

    <%- include('modulos/conteudo', {parte: 'abrir'}) %> 
    <div class="tela-bingo">
        <div class="tela-bingo__bolas-bingo bolas-bingo">
            <div class="bolas-bingo__principal ">
                <span class="bolas-bingo__principal-valor"></span>
            </div>

            <div class="bolas-bingo__secundarias">
                <div class="bolas-secundarias bolas-secundarias__esquerda">
                    <span class='bolas-secundarias__esquerda-valor'>-</span>
                </div>
                
                <div class="bolas-secundarias bolas-secundarias__meio">
                    <span class='bolas-secundarias__meio-valor'>-</span>
                </div>
                
                <div class="bolas-secundarias bolas-secundarias__direita">
                    <span class='bolas-secundarias__direita-valor'>-</span>
                </div>
            </div>
        </div>

        <div class="tela-bingo__tabela-bingo tabela-bingo">
            <div class="tabela-bingo__item tabela-bingo__item--letra">B</div>
            <div class="tabela-bingo__item tabela-bingo__item--letra">I</div>
            <div class="tabela-bingo__item tabela-bingo__item--letra">N</div>
            <div class="tabela-bingo__item tabela-bingo__item--letra">G</div>
            <div class="tabela-bingo__item tabela-bingo__item--letra">O</div>

                <% 
                const larguraTabela = 5
                const listaNumeros = cartela.numeros
                    .split(',')
                    .map(v => Number(v))
                .sort((a, b) => a - b)

                listaNumeros.splice(12, 0, null) // isso vai representar o coringa no meio da lista

                    
                const numerosOrganizados = []
                for (let i = 0; i < listaNumeros.length; i++) {
                    //conta infernal, nao mexe nem um tiquinho nela. Ass: joao
                    var novaPosicao = i * larguraTabela % listaNumeros.length + Math.floor(i / larguraTabela)
                    numerosOrganizados[i] = listaNumeros[novaPosicao]
                }
                
                %>
                
                <% for (let index = 0; index < 12; index++) { %>
                    <div class="tabela-bingo__item pedra-bloqueada pedrinha"><%= numerosOrganizados[index] %></div>
                <% } %>

                <div style="display: flex; align-items: center; justify-content: center;" class="tabela-bingo__item">
                    <span><img style="width: 60%;" src="/assets/img/coringa.svg" alt="Coringa"></span>
                </div>

                <% for (let index = 13; index < numerosOrganizados.length; index++) { %>
                    <div class="tabela-bingo__item pedra-bloqueada pedrinha"><%= numerosOrganizados[index] %></div>
                <% } %>
        </div>

        <button onclick="deubingo()" class="botao-bingo" style="display: none;" >Bingo!!!</button>

    </div> 

    
    <section id="modal-win" style="display: none;" class="modal">
        <div class="modal-container">
        
            <div class="modal-container__text-vencedor">
               <h2>VOCÊ FOI O VENCEDOR!!!</h2> 
            </div>

            <div class="modal-container__vencedor">
                <img src="/assets/img/king.svg" alt="Coroa vencendor">
                <h2>VENCEDOR!!!</h2>
                <div class="modal-container__vencedor-score">
                    <% if(user.role === "user" || user.role === "admin"){ %>
                        <h3>SCORE: <span id="score"><%= 20 %> </span></h3>
                    <% } %>
                </div>
            </div>

            <div class="modal-container__botao">
                <% if(user.role === "user" || user.role === "admin"){ %>
                    <button class="btn-pontuacao" id="add-pontuacao">RECEBER PONTUAÇÃO</button>

                    <script>
                        const getScore = document.querySelector('#add-pontuacao')
                        getScore.addEventListener('click', async (e) => {
                            socket.emit('fim da partida', '<%= sala %>')
                            e.target.style.display = 'none';
                            window.location.replace('/')
                            await fetch('/api/addPoints', {
                                method: 'post',
                                headers: {
                                    'Accept': 'application/json',
                                    'Content-Type': 'application/json'
                                },
                                body: JSON.stringify({
                                    id: '<%= user.id %>'
                                })
                            })
                        })
                    </script>
                <% }else { %>
                    <button class="btn-pontuacao btn-sair btn-fim">SAIR</button>
                    <script>
                        const btnFim = document.querySelector('.btn-fim').addEventListener('click', () => {
                            socket.emit('fim da partida', '<%= sala %>')
                        });
                    </script>
                <% } %>
            </div>
        </div>
    </section>

    <section id="modal-loser" style="display: none;" class="modal">
        <div class="modal-container">
        
            <div class="modal-container__text-vencedor">
               <h2> 
                <span id="usuario-win"></span> 

                FOI O(A) VENCEDOR(a)!!!
            
                </h2> 
            </div>

            <div class="modal-container__perdedor">
                <h2>NÃO FOI DESSA VEZ</h2>
                <img src="/assets/img/perdeu.svg" alt="PERDEDOR">
            </div>

            <div class="modal-container__botao">
                <button class="btn-pontuacao btn-sair">SAIR</button>
            </div>
        </div>
    </section>

    
    <%- include('modulos/conteudo', {parte: 'fechar'}) %>
    <script>
        let listaNumeros = '<%=listaNumeros.toString()%>'.split(',').map(v => Number(v))
        let numerosOrganizados = '<%=numerosOrganizados.toString()%>'.split(',').map(v => Number(v))

        const bolaPrincipal = document.querySelector('.bolas-bingo__principal-valor')
        const bolaEsquerda = document.querySelector('.bolas-secundarias__esquerda-valor')
        const bolaMeio = document.querySelector('.bolas-secundarias__meio-valor')
        const bolaDireita = document.querySelector('.bolas-secundarias__direita-valor')
        const btn_sair = document.querySelectorAll('.btn-sair')

        btn_sair.forEach(btn => {
            btn.addEventListener('click', () => {
                window.location.replace('/')
            });
        })
        

        const listaBolas = [bolaPrincipal, bolaEsquerda, bolaMeio, bolaDireita]

        const itensCartela =  document.querySelectorAll(".tabela-bingo__item:not(.tabela-bingo__item--letra)")

        function atualizarPedras(novaPedra){
            if (typeof novaPedra !== 'number'){
                return
            }

            const bolasNovoValor = [novaPedra,  bolaPrincipal.innerHTML, bolaEsquerda.innerHTML, bolaMeio.innerHTML]
            const temposTimeOut = [0, .3, .6, .9]   

            listaBolas.forEach((bola, index) => {
                setTimeout(() => {
                    bola.classList.remove('bolas-giratorias--desativado')
                    bola.classList.add('bolas-giratorias--ativado')
                    // precisa ser 'ontransitionend' aqui, para ele poder ser desatribuido depois
                    bola.ontransitionend = () => mudarNumero(bola, bolasNovoValor[index])
                }, temposTimeOut[index] * 1000)
            })

            function mudarNumero(elemento, novoValor){
                if (!(elemento instanceof Element)){
                    return
                }

                elemento.innerHTML = novoValor
                elemento.classList.add('bolas-giratorias--desativado')
                elemento.classList.remove('bolas-giratorias--ativado')
                //aqui ele eh desatribuido
                elemento.ontransitionend = null
            }
        }

        const socket = io.connect()

        socket.emit('join', '<%= sala %>', '<%= user.id %>', '<%= criador %>', '<%= user.username %>');

        socket.on('respostaBingo', () => {
            const hello = document.querySelector('#testee')
            hello.style.display = 'block'
        })

        // SOCKET DAS PEDRAS ATUALIZADAS
        socket.on('lista-users', (room, lista) => {
            const sala = "<%= sala %>";
            if(room === sala) {
                const listaDiv = document.querySelector('.modal-container-list__users');
                const modalContainerList = document.querySelectorAll('.modal-container-list__users-names');

                if(modalContainerList.length < 2) {
                    lista.forEach(item => { // item.id, item.username, item.pedras
                    const h1 = document.createElement('h2');
                    const spanPedras = document.createElement('span');
                    const nameSpaces = document.createElement('div')
                    nameSpaces.classList.add('modal-container-list__users-names')
                    spanPedras.textContent = item.pedras;
                    spanPedras.id = `pedras-${item.id}`;
                    h1.innerHTML = item.username
                    nameSpaces.appendChild(h1);
                    nameSpaces.appendChild(spanPedras);
                    listaDiv.appendChild(nameSpaces)
                });
            }
            }
        });

        socket.on('pedra foi marcada', (room, user_id, pedrasAtualizadas) => {
            const sala = '<%= sala %>'
            if(room === sala) {
                console.log(pedrasAtualizadas);
                const pedrasSpan = document.querySelector(`#pedras-${user_id}`);
                pedrasSpan.textContent = pedrasAtualizadas;
            }
        });
        
        function atualizaNumeros(data) {
            const secundarias = document.querySelectorAll('.bolas-secundarias span');
            const principal = document.querySelector('.bolas-bingo__principal span');

            const pedras_div = document.querySelectorAll('.pedrinha');

            pedras_div.forEach((elemento, index) => {
                if(data.find(numero => numero === Number(elemento.textContent))){
                    elemento.classList.remove('pedra-bloqueada');
                    elemento.classList.add("teste")
                }
            });
            
            atualizarPedras(data[0])
        }

        socket.on('sorteadas', function(data, room){
            const sala = '<%= sala %>'
            if(room === sala){
                atualizaNumeros(data.sorteadas);
                const marcada = document.querySelectorAll('.teste');
                marcada.forEach((elemento, index) => {
                    elemento.addEventListener('click', function listener(e) {
                        const numeros_marcados = document.querySelectorAll('.pedra-marcada');
                        if(!e.target.classList.contains('pedra-marcada')){
                            //mostra para os outros usuarios que voce marcou mais um ponto
                            // socket.emit('atualizarMinhaPontuacao', '<%= user.username %>', '<%= sala_name %>')
                            socket.emit('pedra marcada', '<%= user.id %>');
                            e.target.classList.add('pedra-marcada')
                            e.target.classList.remove('teste');
                            e.target.removeEventListener('click', listener)
                            e.target.classList.add('pedra-bloqueada');
                            e.target.classList.remove('pedrinha');
                            if((numeros_marcados.length + 1) === 24) {
                                const botao = document.querySelector('.botao-bingo');
                                document.querySelector('.tabela-bingo').style.display = 'none'
                                botao.style.display = "block";
                            }
                        }
                    })
                })
            }
        });

        socket.on('pontuacaoDeAlguem', (data, room) => {
            
        })
        
            // M O D A I S SOCKETIO

        function deubingo(){
            socket.emit('alguemDeuBingo', '<%= user.id %>', '<%= user.username %>')
        }

        socket.on('win', (id, username, room) =>{
            const sala = '<%= sala %>'
            if(room === sala) {
                const modal_win = document.querySelector('#modal-win');
                const modal_loser = document.querySelector('#modal-loser');
                const user_winner = document.querySelector('#usuario-win');
                let user_id = '<%= user.id %>';
                if(id === user_id){
                    modal_win.style.display = "flex";
                }else {
                    modal_loser.style.display = "flex"
                    user_winner.innerHTML = username;
                }
            }
        })
        // F I M DOS M O D A I S

        

    </script>

<% if(user.id === criador){ %>
    <script>
        socket.emit('pedras')

    socket.on('finalizado', () => {
        clearInterval(gerarPedras);
        console.log('bingo finalizado')
    });
    </script>
<% } %> 
</body>
</html>