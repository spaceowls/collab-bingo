<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="../css/main.css">
    <script src="../socket.io/socket.io.js"></script>

    <title>Sala do dede</title>
</head>
<body>
    <%- include('modulos/cabecalho', {salaAnterior: 'Teste'}) %> 

     <!-- e aquela parte roxa da tela -->
    <%- include('modulos/conteudo', {parte: 'abrir'}) %> 
    <div class="tela-bingo">
        <div class="tela-bingo__bolas-bingo bolas-bingo">
            <div class="bolas-bingo__principal ">
                <span class="bolas-bingo__principal-valor"></span>
            </div>

            <div class="bolas-bingo__secundarias">
                <div class="bolas-secundarias bolas-secundarias__esquerda">
                    <span class='bolas-secundarias__esquerda-valor'></span>
                </div>
                
                <div class="bolas-secundarias bolas-secundarias__meio">
                    <span class='bolas-secundarias__meio-valor'></span>
                </div>
                
                <div class="bolas-secundarias bolas-secundarias__direita">
                    <span class='bolas-secundarias__direita-valor'></span>
                </div>
            </div>
        </div>

        <div class="tela-bingo__tabela-bingo tabela-bingo">
            <div class="tabela-bingo__item tabela-bingo__item--letra">B</div>
            <div class="tabela-bingo__item tabela-bingo__item--letra">I</div>
            <div class="tabela-bingo__item tabela-bingo__item--letra">N</div>
            <div class="tabela-bingo__item tabela-bingo__item--letra">G</div>
            <div class="tabela-bingo__item tabela-bingo__item--letra">O</div>

                    <%
                        const numeros = cartela.numeros.split(',')
                        const b_numeros = numeros.filter(num => num <= 15) 
                        const i_numeros = numeros.filter(num => num >= 16 && num <= 30)
                        const n_numeros = numeros.filter(num => num >= 31 && num <= 45)
                        const g_numeros = numeros.filter(num => num >= 46 && num <= 60) 
                        const o_numeros = numeros.filter(num => num >= 61)
                        
                        const n_numeros_1 = n_numeros.splice(0, 2)
                        const n_numeros_2 = n_numeros.splice(0, 2)
                    %>
                <div class="gap-cartela">
                    <% b_numeros.forEach(num => { %>
                        <div class="tabela-bingo__item" onclick="mudancaItemCartela(this)">
                            <span><%= num %></span>
                        </div>
                    <% }) %>
                </div>

                <div class="gap-cartela">   
                    <% i_numeros.forEach(num => { %>
                        <div class="tabela-bingo__item" onclick="mudancaItemCartela(this)">
                            <span><%= num %></span>
                        </div>
                    <% }) %>
                </div>
                
                <div class="gap-cartela">
                    <% n_numeros_1.forEach(num => { %>
                        <div class="tabela-bingo__item" onclick="mudancaItemCartela(this)">
                            <span><%= num %></span>
                        </div>
                    <% }) %>
                    <div style="display: flex; align-items: center; justify-content: center;" class="tabela-bingo__item">
                        <span><img style="width: 80%;" src="/assets/img/coringa.svg" alt="Coringa"></span>
                    </div>
                    <% n_numeros_2.forEach(num => { %>
                        <div class="tabela-bingo__item" onclick="mudancaItemCartela(this)">
                            <span><%= num %></span>
                        </div>
                    <% }) %>
                </div>
                
                <div class="gap-cartela">
                    <% g_numeros.forEach(num => { %>
                        <div class="tabela-bingo__item" onclick="mudancaItemCartela(this)">
                            <span><%= num %></span>
                        </div>
                    <% }) %>
                </div>
                
                <div class="gap-cartela">
                    <% o_numeros.forEach(num => { %>
                        <div class="tabela-bingo__item" onclick="mudancaItemCartela(this)">
                            <span><%= num %></span>
                        </div>
                    <% }) %>
                </div>
        </div>

        <button class="botao-bingo">Bingo!!!</button>

    </div>  
    <%- include('modulos/conteudo', {parte: 'fechar'}) %>
    <script>
        const bolaPrincipal = document.querySelector('.bolas-bingo__principal-valor')
        const bolaEsquerda = document.querySelector('.bolas-secundarias__esquerda-valor')
        const bolaMeio = document.querySelector('.bolas-secundarias__meio-valor')
        const bolaDireita = document.querySelector('.bolas-secundarias__direita-valor')

        const listaBolas = [bolaPrincipal, bolaEsquerda, bolaMeio, bolaDireita]

        const itensCartela =  document.querySelectorAll(".tabela-bingo__item:not(.tabela-bingo__item--letra)")

        function mudancaItemCartela(elemento){
            if (!(elemento instanceof Element)){
                return
            }

            elemento.classList.toggle('tabela-bingo__item--selecionado')
        }

        function atualizarPedras(novaPedra){
            if (typeof novaPedra !== 'number'){
                return
            }

            const bolasNovoValor = [novaPedra,  bolaPrincipal.innerHTML, bolaEsquerda.innerHTML, bolaMeio.innerHTML]
            const temposTimeOut = [0, .3, .6, .9]   

            listaBolas.forEach((bola, index) => {
                setTimeout(() => {
                    bola.classList.remove('bolas-giratorias--desativado')
                    bola.classList.add('bolas-giratorias--ativado')
                    // precisa ser 'ontransitionend' aqui, para ele poder ser desatribuido depois
                    bola.ontransitionend = () => mudarNumero(bola, bolasNovoValor[index])
                }, temposTimeOut[index] * 1000)
            })

            function mudarNumero(elemento, novoValor){
                if (!(elemento instanceof Element)){
                    return
                }

                elemento.innerHTML = novoValor
                elemento.classList.add('bolas-giratorias--desativado')
                elemento.classList.remove('bolas-giratorias--ativado')
                //aqui ele eh desatribuido
                elemento.ontransitionend = null
            }
            
        }

        window.addEventListener('load', () => {
            function clicarDelay(elemento, delay) {
                setTimeout(() => elemento.clicar(), delay)
            }

            let dale = Array.from(itensCartela.values())
            dale.sort((a, b) => Math.random() > 0.5 ? 1 : -1)

            dale.forEach(elemento => setTimeout(() => elemento.click(), 500))
            dale.forEach(elemento => setTimeout(() => elemento.click(), 1000))
        })


        const socket = io.connect()

            socket.emit('join', '<%= sala %>');
    
            // function clicou(){
            //     socket.emit('bingo')
            // }
    
            socket.on('respostaBingo', () => {
                const hello = document.querySelector('#testee')
                hello.style.display = 'block'
            })
    
            
    
            function atualizaNumeros(data) {
                const secundarias = document.querySelectorAll('.bolas-secundarias span');
                const principal = document.querySelector('.bolas-bingo__principal span');
                if(data.length >= 4) {
                    secundarias.forEach((element, index) => {
                    element.innerHTML = data[index + 1];
                });

                principal.innerHTML = data[0];
                console.log(data); 
            }
        }
    
            
            socket.on('sorteadas', function(data){
                atualizaNumeros(data.sorteadas);
            });

            // M O D A I S SOCKETIO


            let numerosDoBingo = [];
            let numerosDaCartela = [];

            function bingo(){
                socket.emit('alguem deu bingo', {numerosDoBingo}, {numerosDaCartela})
            }

            socket.on('win', ()=>{
                window.location.replace('/modalVencedor');
            })

            socket.on('loss', ()=>{
                window.location.replace('/modalPerdedor');
            })

            // F I M DOS M O D A I S


    </script>

<% if(user.id === criador){ %>
    <script>
        function clicou2(){
        socket.emit('pedras')
    }

    const gerarPedras = setInterval(() => {
        clicou2();
    }, 3000);

    socket.on('finalizado', () => {
        clearInterval(gerarPedras);
        console.log('bingo finalizado')
    });
    </script>
<% } %>
</body>
</html>